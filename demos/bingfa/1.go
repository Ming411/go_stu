package main

import (
	"fmt"
	"strings"
)

func main() {
	ips := []string{
		"160.181.180.3/26",
		"160.181.180.4/26",
		"160.181.180.5/26",
		"160.181.180.6/26",
		"160.181.180.7/26",
		"160.181.180.8/26",
		"160.181.180.9/26",
		"160.181.180.10/26",
		"160.181.180.11/26",
		"160.181.180.12/26",
		"160.181.180.13/26",
		"160.181.180.14/26",
		"160.181.180.15/26",
		"160.181.180.16/26",
		"160.181.180.17/26",
		"160.181.180.18/26",
		"160.181.180.19/26",
		"160.181.180.20/26",
		"160.181.180.21/26",
		"160.181.180.22/26",
		"160.181.180.23/26",
		"160.181.180.24/26",
		"160.181.180.25/26",
		"160.181.180.26/26",
		"160.181.180.27/26",
		"160.181.180.28/26",
		"160.181.180.29/26",
		"160.181.180.30/26",
		"172.17.160.11/24",
		"172.19.0.1/16",
		"172.18.0.1/16",
		"172.17.0.1/16",
	}
	var internalIPs []string
	var externalIPs []string
	for _, ip := range ips {
		// strings.HasPrefix() 或 strings.Contains()
		// 判断ip是否在内网
		// if ip[:3] == "10." || ip[:8] == "172.16." || ip[:8] == "172.17." || ip[:8] == "172.18." || ip[:8] == "172.19." || ip[:8] == "172.20." || ip[:8] == "172.21." || ip[:8] == "172.22." || ip[:8] == "172.23." || ip[:8] == "172.24." || ip[:8] == "172.25." || ip[:8] == "172.26." || ip[:8] == "172.27." || ip[:8] == "172.28." || ip[:8] == "172.29." || ip[:8] == "172.30." || ip[:8] == "172.31." || ip[:3] == "192" {
		if strings.HasPrefix(ip, "10.") || strings.HasPrefix(ip, "172.") || strings.HasPrefix(ip, "192.") {
			internalIPs = append(internalIPs, ip)
		} else {
			externalIPs = append(externalIPs, ip)
		}
	}
	fmt.Println("内网IP：", internalIPs)
	fmt.Println("外网IP：", externalIPs)

	fmt.Println("123." == "123.")
}
